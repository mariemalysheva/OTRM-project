import telebot
import os
from text_processing import classify_document, load_classifier, extract_text_layer
with open("bot-token.txt", "r") as f:
    token = f.read()

bot = telebot.TeleBot(token)
cwd = "D:\\OTRM Datasets\\bot\\"
erdir = cwd + "error\\"
os.makedirs(erdir, exist_ok=True)


@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id,
                     "Добрый день! Присылайте документы или отправьте текстовое сообщение для обработки")


@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, "OTRM Bot осуществляет обработку  .pdf, .jpeg, .png, .txt документов.\n"
                                      "Для начала работы с ботом нажмите /start")
    # TODO написать инструкцию по работе с ботом
    pass


@bot.message_handler(content_types=["text"])
def handle_text(message):
    bot.reply_to(message, "Текст получен. Начинаем обработку")
    # src = cwd + "text_" + str(message.id)

    try:
        # with open(src, 'wt') as new_file:
        #   new_file.write(message.text)

        doc_type = classify_document(message.text, MODEL, VECTORIZER)

        bot.send_message(message.chat.id, 'Текст успешно обработан!')
        bot.reply_to(message,
                     f"Результаты обработки: \n\n"
                     f"Количество страниц - {''}\n"
                     f"Тип распознанного документа - {doc_type[0]}\n"
                     f"Извлеченная информация - {''}\n")

        # os.remove(src)

    except Exception as e:
        bot.reply_to(message, f'Ошибка при обработке текста {message.id}')

        src = erdir + "text_" + str(message.id)
        with open(src, 'wt') as new_file:
            new_file.write(message.text)
        raise e


@bot.message_handler(content_types=["document"])
def handle_document(message):
    bot.reply_to(message, "Получили Ваш документ. Начинаем обработку")

    file_info = bot.get_file(message.document.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    src = cwd + message.document.file_name

    try:
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)

        doc_text = extract_text_layer(cwd, message.document.file_name)
        doc_type = classify_document(doc_text, MODEL, VECTORIZER)

        bot.send_message(message.chat.id, 'Документ успешно обработан!')

        bot.reply_to(message,
                     f"Результаты обработки: \n\n"
                     f"Количество страниц - {''}\n"
                     f"Тип распознанного документа - {doc_type[0]}\n"
                     f"Извлеченная информация - {''}\n")
        os.remove(src)

    except Exception as e:
        bot.reply_to(message, f'Ошибка при обработке документа {message.id}')

        src = erdir + message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        raise e


@bot.message_handler(content_types=["photo"], func=lambda message: True)
def handle_photo(message):
    bot.send_message(message.chat.id,
                     'Пожалуйста, отправьте файл в виде документа. '
                     'При отправке фото документ сохраняется в плохом качестве и обработка файла может быть невозможна.'
                     )


def main():
    bot.polling(none_stop=True, interval=0)


if __name__ == "__main__":
    MODEL, VECTORIZER = load_classifier()
    main() 
